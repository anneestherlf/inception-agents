name: Coleta Horária de Dados de Startups

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  run-data-collection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Baixar o código do repositório
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar bibliotecas
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # --------------------------------------------------------------------
      # A MUDANÇA CRÍTICA ESTÁ AQUI
      # --------------------------------------------------------------------
      # Em vez de 'echo', usamos Python para criar o arquivo de forma segura.
      - name: Criar credentials.json a partir do segredo (Método Seguro)
        # Este comando Python lê a variável de ambiente (onde o segredo está)
        # e a escreve em um arquivo, preservando a formatação exata.
        run: |
          import os
          creds_json = os.getenv('GDRIVE_API_CREDENTIALS_JSON')
          with open('credentials.json', 'w') as f:
            f.write(creds_json)
        # Usamos 'python -c' para executar um comando Python diretamente.
        shell: python
        env:
          # Passamos o segredo para a variável de ambiente que o script Python vai ler.
          GDRIVE_API_CREDENTIALS_JSON: ${{ secrets.GDRIVE_API_CREDENTIALS_JSON }}

      # Passo de verificação para garantir que o arquivo foi criado
      - name: Verificar se o credentials.json foi criado
        run: ls -l

      # O resto do workflow continua o mesmo
      - name: Executar script de coleta (main.py)
        run: python main.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
